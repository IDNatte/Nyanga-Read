name: Build Windows
on:
  push:
    tags:
      - 'v*'

jobs:
  createrelease:
    name: Create Release
    runs-on: windows-latest
    steps:
      - name: Initial step
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Version Update
        shell: bash
        run: |
          VERSION=$(jq -r '.version' package.json)
          RELEASE=$(jq -r '.releaseRef' docs/app/version.json)
          OS="windows"
          cat << EOF > docs/app/version.json
          {
            "currentVersion": "$VERSION",
            "releaseRef": "$RELEASE",
            "os": "$OS"
          }
          EOF
          echo "{\"version\": \"$VERSION\"}" > release.$OS.json
      - name: Build Windows
        run: |
          refreshenv
          mkdir log
          New-Item -ItemType "File" -Path ".\log\app.log" -Force
          npm install
          npm run svelte:build
          python -m venv .venv --upgrade-deps
          .\.venv\Scripts\Activate.ps1
          python -m pip install --upgrade pip
          pip install -r scripts/requirements/requirements-win.txt
          pyinstaller --noconfirm --distpath nyanga scripts/specfile/Nyanga-Read-windows.spec
      - name: Save Release URL
        env:
          RELEASE_URL: ${{ steps.create_release.outputs.upload_url }}
        run: echo "$RELEASE_URL" >> $GITHUB_ENV
      - name: Release assets
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.RELEASE_URL }}
          asset_path: ./nyanga/Nyanga-Read-windows.exe
          asset_name: Nyanga-Read-windows.exe
          asset_content_type: application/vnd.microsoft.portable-executable
